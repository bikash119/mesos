# Makefile.

SHELL = '/bin/sh'

BINDIR = @top_builddir@/bin
LIBDIR = @top_builddir@/lib

CC = @CC@
CXX = @CXX@
SWIG = @SWIG@

CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@

OS_NAME = @OS_NAME@

JAVA_HOME = @JAVA_HOME@
PYTHON_HEADERS = @PYTHON_HEADERS@

WITH_ZOOKEEPER = @WITH_ZOOKEEPER@

WITH_INCLUDED_ZOOKEEPER = @WITH_INCLUDED_ZOOKEEPER@

LIBPROCESS = third_party/libprocess

LIBEV = $(LIBPROCESS)/third_party/libev-3.8

GLOG = third_party/glog-0.3.1

SQLITE = third_party/sqlite-3.6.23.1

ZOOKEEPER = third_party/zookeeper-3.3.1/src/c

# Ensure that we get better debugging info.
CFLAGS += -g
CXXFLAGS += -g

# Add source dir to CFLAGS and CXXFLAGS.
CFLAGS += -I@srcdir@
CXXFLAGS += -I@srcdir@

# Add include to CFLAGS and CXXFLAGS.
CFLAGS += -I@top_srcdir@/include
CXXFLAGS += -I@top_srcdir@/include

# Add boost to CFLAGS and CXXFLAGS.
CFLAGS += -I@top_srcdir@/third_party/boost-1.37.0
CXXFLAGS += -I@top_srcdir@/third_party/boost-1.37.0

# Add libprocess to CFLAGS, CXXFLAGS, and LDFLAGS.
CFLAGS += -I@top_srcdir@/$(LIBPROCESS)
CXXFLAGS += -I@top_srcdir@/$(LIBPROCESS)
LDFLAGS += -L@top_builddir@/$(LIBPROCESS)

# Add libev to LDFLAGS.
LDFLAGS += -L@top_builddir@/$(LIBEV)/.libs

# Add glog to include and lib paths.
CXXFLAGS += -I@top_srcdir@/$(GLOG)/src -I@top_builddir@/$(GLOG)/src -I@top_srcdir@/$(SQLITE)
LDFLAGS += -L@top_builddir@/$(GLOG)/.libs -L@top_builddir@/$(SQLITE)/.libs

# Add included ZooKeeper to include and lib paths if necessary.
ifeq ($(WITH_INCLUDED_ZOOKEEPER),1)
  CXXFLAGS += -I@top_srcdir@/$(ZOOKEEPER)/include -I@top_srcdir@/$(ZOOKEEPER)/generated
  LDFLAGS += -L@top_builddir@/$(ZOOKEEPER)/.libs
endif

# Add dependency tracking to CFLAGS, CXXFLAGS.
CFLAGS += -MMD -MP
CXXFLAGS += -MMD -MP

# Add build date to CFLAGS, CXXFLAGS
CFLAGS += -DBUILD_DATE="\"$$(date '+%Y-%m-%d %H:%M:%S')\""
CXXFLAGS += -DBUILD_DATE="\"$$(date '+%Y-%m-%d %H:%M:%S')\""

# Add build user to CFLAGS, CXXFLAGS
CFLAGS += -DBUILD_USER="\"$$USER\""
CXXFLAGS += -DBUILD_USER="\"$$USER\""

# Add libev to LDFLAGS.
LDFLAGS += -L$(LIBEV)/.libs

# Add glog, libev, libprocess, pthread, and dl to LIBS.
LIBS += -lglog -lprocess -lev -lpthread -ldl -lsqlite3

# Add ZooKeeper if necessary.
ifeq ($(WITH_ZOOKEEPER),1)
  LIBS += -lzookeeper_st
endif

SCHED_EXES = $(BINDIR)/examples/test-framework		\
             $(BINDIR)/examples/cpp-test-framework	\
             $(BINDIR)/examples/memhog			\
             $(BINDIR)/examples/scheduled-memhog

EXEC_EXES = $(BINDIR)/examples/test-executor		\
            $(BINDIR)/examples/cpp-test-executor	\
            $(BINDIR)/examples/memhog-executor

EXAMPLES_EXES = $(SCHED_EXES) $(EXEC_EXES)

MESOS_SCHED_LIB = $(LIBDIR)/libmesos_sched.a
MESOS_EXEC_LIB = $(LIBDIR)/libmesos_exec.a

JAVA_CLASSES = $(BINDIR)/examples/java/TestFramework.class          \
               $(BINDIR)/examples/java/TestExecutor.class           \
               $(BINDIR)/examples/java/TestExceptionFramework.class

JAVA_SCRIPTS = $(BINDIR)/examples/java/test_framework               \
	       $(BINDIR)/examples/java/test_executor                \
	       $(BINDIR)/examples/java/test_exception_framework

JAVA = $(JAVA_CLASSES) $(JAVA_SCRIPTS)

MESOS_JAVA_JAR = $(LIBDIR)/java/mesos.jar

PYTHON_SCRIPTS = $(BINDIR)/examples/python/test_framework.py        \
                 $(BINDIR)/examples/python/test_framework           \
                 $(BINDIR)/examples/python/test_executor.py         \
                 $(BINDIR)/examples/python/test_executor            \

PYTHON = $(PYTHON_SCRIPTS)

MESOS_PYTHON_LIB = $(LIBDIR)/python/_mesos.so

# Create rules for building the directories that aren't created
# automagically by configure.
DIRECTORIES = $(BINDIR)/examples                \
	      $(BINDIR)/examples/java           \
	      $(BINDIR)/examples/python


default: all

-include $(patsubst %, %.d, $(EXAMPLES_EXES))

$(DIRECTORIES): %:
	mkdir -p $@

$(EXAMPLES_EXES): | $(BINDIR)/examples

$(BINDIR)/examples/test-framework: @srcdir@/test_framework.cpp $(MESOS_SCHED_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_SCHED_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/test-executor: @srcdir@/test_exec.cpp $(MESOS_EXEC_LIB)
	g++ $(CXXFLAGS) -o $@ $< $(MESOS_EXEC_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/cpp-test-framework: @srcdir@/cpp_test_framework.cpp $(MESOS_SCHED_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_SCHED_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/cpp-test-executor: @srcdir@/cpp_test_executor.cpp $(MESOS_EXEC_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_EXEC_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/memhog: @srcdir@/memhog.cpp $(MESOS_SCHED_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_SCHED_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/memhog-executor: @srcdir@/memhog_executor.cpp $(MESOS_EXEC_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_EXEC_LIB) $(LDFLAGS) $(LIBS)

$(BINDIR)/examples/scheduled-memhog: @srcdir@/scheduled_memhog.cpp $(MESOS_SCHED_LIB)
	$(CXX) $(CXXFLAGS) -o $@ $< $(MESOS_SCHED_LIB) $(LDFLAGS) $(LIBS)

$(JAVA): | $(BINDIR)/examples/java

$(JAVA_CLASSES): $(MESOS_JAVA_JAR)

$(JAVA_CLASSES): $(BINDIR)/examples/java/%.class: @srcdir@/java/%.java
ifdef JAVA_HOME
	$(JAVA_HOME)/bin/javac -cp $(MESOS_JAVA_JAR):@srcdir@/java -sourcepath @srcdir@/java -d $(BINDIR)/examples/java $<
endif

$(JAVA_SCRIPTS): $(BINDIR)/examples/java/%: @srcdir@/java/%
ifdef JAVA_HOME
	cp -r $< $@
endif

$(PYTHON): | $(BINDIR)/examples/python

$(PYTHON_SCRIPTS): $(MESOS_PYTHON_LIB)

$(PYTHON_SCRIPTS): $(BINDIR)/examples/python/%: @srcdir@/python/%
ifdef PYTHON_HEADERS
	cp -r $< $@
endif

all: $(EXAMPLES_EXES) $(JAVA) $(PYTHON)

clean:
	rm -f $(patsubst %, %.d, $(EXAMPLES_EXES))
	rm -rf $(patsubst %, %.dSYM, $(EXAMPLES_EXES))
	rm -f $(EXAMPLES_EXES)
	rm -f $(JAVA) $(PYTHON)
	rm -f TAGS

.PHONY: default all clean
