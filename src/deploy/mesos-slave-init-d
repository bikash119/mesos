#! /bin/bash

### BEGIN INIT INFO
# Provides:          mesos-slave
# Required-Start:
# Required-Stop:
# Should-Start:
# Default-Start:
# Default-Stop:
# Short-Description: Mesos cluster management slave daemon
# Description:       Mesos is a cluster managment middleware layer
#                    and this starts a slave process to register with
#                    a currently running Mesos master.
### END INIT INFO

# /etc/init.d/mesos-slave: start and stop the mesos-slave daemon

DAEMON='/usr/local/mesos/bin/mesos-slave'
MESOS_ENABLE=false
MESOS_OPTS=''
MESOS_DEFAULTS_FILE=/etc/default/mesos-slave
MESOS_CONFIG_DIR=/usr/local/mesos/conf
MESOS_CONFIG_FILE=$MESOS_CONFIG_DIR/mesos.conf
MESOS_PID_FILE=/var/run/mesos-slave.pid

test -x $DAEMON || exit 0

. /lib/lsb/init-functions

if [ -s $MESOS_DEFAULTS_FILE ]; then
    . $MESOS_DEFAULTS_FILE
    case "x$MESOS_ENABLE" in
	xtrue|xfalse)	;;
	xinetd)		exit 0
			;;
	*)		log_failure_msg "Value of MESOS_ENABLE in $MESOS_DEFAULTS_FILE must be either 'true' or 'false';"
			log_failure_msg "not starting mesos-slave daemon."
			exit 1
			;;
    esac
fi

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

mesosslave_start() {
    if [ ! -d "$MESOS_CONFIG_DIR" ]; then
        mkdir -p $MESOS_CONFIG_DIR
    fi

    # If this is ec2, update conf file with any user-data.
    # This is how we get the master URL.
    grep url $MESOS_CONFIG_FILE > /dev/null
    if [ $? != 0 ]; then
      curl -f http://169.254.169.254/1.0/user-data >> $MESOS_CONFIG_FILE
    fi

    ulimit -n 8192

    PROGRAM=$1
    shift

    MESOS_OPTS=""
    # Compute CPU and memory resources on this machine (TODO: Linux-specific)
    if [ `uname` == "Linux" ]; then
      CPUS=`grep processor /proc/cpuinfo | wc -l`
      MEM_KB=`cat /proc/meminfo | grep MemTotal | awk '{print $2}'`
      MEM=$[(MEM_KB - 1024 * 1024) / 1024] # Leaves 1 GB free
      MESOS_OPTS="--cpus=$CPUS --mem=$MEM"
    fi

    if start-stop-daemon --start --background \
        --pidfile $MESOS_PID_FILE --make-pidfile \
        --exec $DAEMON -- $MESOS_OPTS conf=$MESOS_CONFIG_DIR
    then
        rc=0
        sleep 1
        if ! kill -0 $(cat $MESOS_PID_FILE) >/dev/null 2>&1; then
            log_failure_msg "mesos-slave daemon failed to start"
            rc=1
        fi
    else
        rc=1
    fi
    if [ $rc -eq 0 ]; then
        log_end_msg 0
    else
        log_end_msg 1
        rm -f $MESOS_PID_FILE
    fi
} # mesosslave_start


case "$1" in
  start)
	if "$MESOS_ENABLE"; then
	    log_daemon_msg "Starting mesos-slave daemon" "mesos-slave"
	    if [ -s $MESOS_PID_FILE ] && kill -0 $(cat $MESOS_PID_FILE) >/dev/null 2>&1; then
		log_progress_msg "apparently already running"
		log_end_msg 0
		exit 0
	    fi
            mesosslave_start
        else
            log_warning_msg "MESOS_ENABLE var set to false."
            if [ -d "$MESOS_CONFIG_FILE" ]; then
                [ "$VERBOSE" != no ] && log_warning_msg "mesos-slave daemon not enabled in $MESOS_DEFAULTS_FILE, not starting..."
            fi
	fi
	;;
  stop)
	log_daemon_msg "Stopping mesos-slave daemon" "mesos-slave"
	start-stop-daemon --stop --quiet --oknodo --pidfile $MESOS_PID_FILE
	log_end_msg $?
	rm -f $MESOS_PID_FILE
	;;

  reload|force-reload)
	log_warning_msg "Reloading mesos-slave daemon: not needed, as the daemon"
	log_warning_msg "re-reads the config file whenever a client connects."
	;;

  restart)
	if $MESOS_ENABLE; then
	    log_daemon_msg "Restarting mesos-slave daemon" "mesos-slave"
	    if [ -s $MESOS_PID_FILE ] && kill -0 $(cat $MESOS_PID_FILE) >/dev/null 2>&1; then
		start-stop-daemon --stop --quiet --oknodo --pidfile $MESOS_PID_FILE || true
		sleep 1
	    else
		log_warning_msg "mesos-slave daemon not running, attempting to start."
		rm -f $MESOS_PID_FILE
	    fi
            mesosslave_start
        else
            if [ -s "$MESOS_CONFIG_DIR" ]; then
                [ "$VERBOSE" != no ] && log_warning_msg "mesos-slave daemon not enabled in $MESOS_DEFAULTS_FILE, not starting..."
            fi
	fi
	;;

  status)
	status_of_proc -p $MESOS_PID_FILE "$DAEMON" mesos-slave
	exit $?	# notreached due to set -e
	;;
  *)
	echo "Usage: /etc/init.d/mesos-slave {start|stop|reload|force-reload|restart|status}"
	exit 1
esac

exit 0
